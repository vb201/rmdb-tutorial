{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumbnail/Thumbnail.styles.js","components/Thumbnail/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styled.js","components/SearchBar/index.js","API.js","helpers.js","hooks/useHomeFetch.js","images/no_image.jpg","components/LoadMoreButton/LoadMoreButton.styles.js","components/LoadMoreButton/index.js","components/Home.js","components/Breadcrumb/Breadcrumb.styles.js","components/Breadcrumb/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Cast/Cast.styles.js","components/Cast/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","GlobalStyles.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImage","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumbnail","movieId","clickable","Spinner","SeachBar","setSearchTerm","useState","state","setState","initialRender","useRef","useEffect","current","timer","setTimeout","clearTimeout","seachIcon","type","placeholder","onChange","event","currentTarget","value","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","checkExistingState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_result","button","LoadMoreButton","callback","onClick","Home","loading","setLoading","error","setError","LoadingMore","setLoadingMore","API","movies","prev","setItem","useHomeFetch","res","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","Breadcrumb","movieTitle","backdrop","MovieInfo","className","vote_average","directors","length","director","name","credit_id","MovieInfoBar","budget","revenue","cast","propTypes","PropTypes","string","character","imageUrl","Cast","Movie","credits","crew","filter","member","job","useMovieFetch","useParams","runtime","profile_path","NotFound","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1be67f6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tbackground: var(--darkGrey);\r\n\tdisplay: flex;\r\n\tpadding: 0px 40px;\r\n\tjustify-content: center;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\tdisplay: flex;\r\n\tflex: 1;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tmax-width: var(--maxWidth);\r\n\tpadding: 15px 0px;\r\n\tmargin: 0px 10px;\r\n`;\r\n\r\nexport const LogoImage = styled.img`\r\n\twidth: 200px;\r\n\r\n\t@media (max-width: 500px) {\r\n\t\twidth: 150px;\r\n\t} ;\r\n`;\r\n\r\nexport const TMDBLogoImg = styled.img`\r\n\twidth: 100px;\r\n\r\n\t@media (max-width: 500px) {\r\n\t\twidth: 80px;\r\n\t}\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport RMDBLogo from \"../../images/react-movie-logo.svg\";\r\n\r\nimport TMDBLogo from \"../../images/tmdb_logo.svg\";\r\n\r\nimport { Wrapper, Content, LogoImage, TMDBLogoImg } from \"./Header.styles\";\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<Content>\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<LogoImage src={RMDBLogo} alt=\"rmdb-logo\" />\r\n\t\t\t\t</Link>\r\n\t\t\t\t<TMDBLogoImg src={TMDBLogo} alt=\"tmdb-logo\" />\r\n\t\t\t</Content>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = process.env.REACT_APP_TMDB_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = \"http://image.tmdb.org/t/p/\";\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = \"w1280\";\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = \"w780\";\n\nexport {\n\tSEARCH_BASE_URL,\n\tPOPULAR_BASE_URL,\n\tAPI_URL,\n\tAPI_KEY,\n\tIMAGE_BASE_URL,\n\tBACKDROP_SIZE,\n\tPOSTER_SIZE,\n\tREQUEST_TOKEN_URL,\n\tLOGIN_URL,\n\tSESSION_ID_URL,\n};\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tbackground: linear-gradient(\r\n\t\t\tto bottom,\r\n\t\t\trgba(0, 0, 0, 0) 39%,\r\n\t\t\trgba(0, 0, 0, 0) 41%,\r\n\t\t\trgba(0, 0, 0, 0) 100%\r\n\t\t),\r\n\t\turl(${({ image }) => image}), var(--darkGrey);\r\n\tbackground-size: 100% cover;\r\n\tbackground-position: center;\r\n\theight: 600px;\r\n\tposition: relative;\r\n\tanimation: animateHeroImage 1s;\r\n\r\n\t@keyframes animateHeroImage {\r\n\t\tfrom {\r\n\t\t\topacity: 0;\r\n\t\t}\r\n\t\tto {\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\tpadding: 20px;\r\n\tmax-width: var(--maxWidth);\r\n\tmargin: 0 auto;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n\tz-index: 100;\r\n\tmax-width: 700px;\r\n\tposition: absolute;\r\n\tbottom: 40px;\r\n\tmargin-right: 20px;\r\n\tmin-height: 100px;\r\n\tcolor: var(--white);\r\n\r\n\th1 {\r\n\t\tfont-size: var(--fontXL);\r\n\r\n\t\t@media (max-width: 720px) {\r\n\t\t\tfont-size: var(--fontL);\r\n\t\t}\r\n\t\tp {\r\n\t\t\tfont-size: var(--fontM);\r\n\r\n\t\t\t@media (max-width: 720px) {\r\n\t\t\t\tfont-size: var(--fontS);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t@media (max-width: 720px) {\r\n\t\t\tmax-width: 100%;\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// styles\r\nimport { Wrapper, Content, Text } from \"./HeroImage.styles\";\r\n\r\nconst HeroImage = ({ image, title, text }) => {\r\n\treturn (\r\n\t\t<Wrapper image={image}>\r\n\t\t\t<Content>\r\n\t\t\t\t<Text>\r\n\t\t\t\t\t<h1>{title}</h1>\r\n\t\t\t\t\t<p>{text}</p>\r\n\t\t\t\t</Text>\r\n\t\t\t</Content>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nHeroImage.propTypes = {\r\n\timage: PropTypes.string,\r\n\ttitle: PropTypes.string,\r\n\ttext: PropTypes.string,\r\n};\r\nexport default HeroImage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tmax-width: var(--maxWidth);\r\n\tmargin: 0 auto;\r\n\tpadding: 0 20px;\r\n\r\n\th1 {\r\n\t\tcolor: var(--medGrey);\r\n\t\tfont-size: var(--fontXL);\r\n\t\t@media (max-width: 768px) {\r\n\t\t\tfont-size: var(--fontL);\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n\tgrid-gap: 2rem;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// styles\r\nimport { Wrapper, Content } from \"./Grid.styles\";\r\nconst Grid = ({ header, children }) => {\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<h1>{header}</h1>\r\n\t\t\t<Content>{children}</Content>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nGrid.propTypes = {\r\n\theader: PropTypes.string,\r\n};\r\nexport default Grid;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n\twidth: 100%;\r\n\tmax-width: 720px;\r\n\ttransition: all 0.3s;\r\n\tobject-fit: cover;\r\n\tborder-radius: 20px;\r\n\tanimation: animateThumbnail 0.5s;\r\n\r\n\t:hover {\r\n\t\topacity: 0.8;\r\n\t}\r\n\t@keyframes animateThumbnail {\r\n\t\tfrom {\r\n\t\t\topacity: 0;\r\n\t\t}\r\n\t\tto {\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// styles\r\nimport { Image } from \"./Thumbnail.styles\";\r\n\r\nconst Thumbnail = ({ image, movieId, clickable }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{clickable ? (\r\n\t\t\t\t<Link to={`/${movieId}`}>\r\n\t\t\t\t\t<Image src={image} alt=\"movie-thumbnail\" />\r\n\t\t\t\t</Link>\r\n\t\t\t) : (\r\n\t\t\t\t<Image src={image} alt=\"movie-thumbnail\" />\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nThumbnail.propTypes = {\r\n\timage: PropTypes.string,\r\n\tmovieId: PropTypes.number,\r\n\tclickable: PropTypes.bool,\r\n};\r\nexport default Thumbnail;\r\n","import { Spinner } from \"./Spinner.styles\";\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Spinner = styled.div`\r\n\tborder: 5px solid var(--lightGrey);\r\n\tborder-top: 5px solid var(--medGrey);\r\n\tborder-radius: 50%;\r\n\twidth: 50px;\r\n\theight: 50px;\r\n\tanimation: spin 0.8s linear infinite;\r\n\tmargin: 20px auto;\r\n\r\n\t@keyframes spin {\r\n\t\tfrom {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\tto {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\theight: 100px;\r\n\tbackground: var(--darkGrey);\r\n\tpadding: 0 20px;\r\n\r\n\t@media (max-width: 768px) {\r\n\t\theight: 80px;\r\n\t}\r\n\r\n\t@media (max-width: 576px) {\r\n\t\theight: 65px;\r\n\t}\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\tposition: relative;\r\n\tmax-width: var(--maxWidth);\r\n\twidth: 100%;\r\n\theight: 55px;\r\n\tbackground: var(--medGrey);\r\n\tmargin: 0 auto;\r\n\tborder-radius: 40px;\r\n\tcolor: var(--white);\r\n\r\n\t@media (max-width: 768px) {\r\n\t\theight: 50px;\r\n\t}\r\n\r\n\t@media (max-width: 576px) {\r\n\t\theight: 44px;\r\n\t}\r\n\r\n\timg {\r\n\t\tposition: absolute;\r\n\t\tleft: 15px;\r\n\t\ttop: 14px;\r\n\t\twidth: 30px;\r\n\t\t@media (max-width: 768px) {\r\n\t\t\tleft: 14px;\r\n\t\t\ttop: 13px;\r\n\t\t\twidth: 24px;\r\n\t\t}\r\n\t\t@media (max-width: 576px) {\r\n\t\t\tleft: 12px;\r\n\t\t\ttop: 11px;\r\n\t\t\twidth: 21px;\r\n\t\t}\r\n\t}\r\n\r\n\tinput {\r\n\t\tfont-size: var(--fontL);\r\n\t\tposition: absolute;\r\n\t\tleft: 0;\r\n\t\tmargin: 8px 0;\r\n\t\tpadding: 0 0 0 60px;\r\n\t\tborder: 0;\r\n\t\twidth: 95%;\r\n\t\tbackground: transparent;\r\n\t\theight: 40px;\r\n\t\tcolor: var(--white);\r\n\r\n\t\t@media (max-width: 768px) {\r\n\t\t\tfont-size: var(--fontM);\r\n\r\n\t\t\theight: 32px;\r\n\t\t}\r\n\r\n\t\t@media (max-width: 576px) {\r\n\t\t\tfont-size: var(--fontS);\r\n\t\t\theight: 26px;\r\n\t\t}\r\n\r\n\t\t:focus {\r\n\t\t\toutline: none;\r\n\t\t}\r\n\t}\r\n`;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Search Icon\r\nimport seachIcon from \"../../images/search-icon.svg\";\r\n\r\n// Styles\r\nimport { Wrapper, Content } from \"./SearchBar.styled\";\r\nconst SeachBar = ({ setSearchTerm }) => {\r\n\tconst [state, setState] = useState(\"\");\r\n\tconst initialRender = useRef(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (initialRender.current) {\r\n\t\t\tinitialRender.current = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst timer = setTimeout(() => {\r\n\t\t\tsetSearchTerm(state);\r\n\t\t}, 500);\r\n\r\n\t\treturn () => clearTimeout(timer);\r\n\t}, [setSearchTerm, state]);\r\n\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<Content>\r\n\t\t\t\t<img src={seachIcon} alt=\"search-icon\" />\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Search Movies\"\r\n\t\t\t\t\tonChange={(event) => setState(event.currentTarget.value)}\r\n\t\t\t\t\tvalue={state}\r\n\t\t\t\t/>\r\n\t\t\t</Content>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nSeachBar.propTypes = {\r\n\tsetSearchTerm: PropTypes.func,\r\n};\r\nexport default SeachBar;\r\n","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n\tconst hours = Math.floor(time / 60);\n\tconst mins = time % 60;\n\treturn `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = (money) => {\n\tconst formatter = new Intl.NumberFormat(\"en-US\", {\n\t\tstyle: \"currency\",\n\t\tcurrency: \"USD\",\n\t\tminimumFractionDigits: 0,\n\t});\n\treturn formatter.format(money);\n};\n\nexport const checkExistingState = (stateName) => {\n\tconst sessionState = sessionStorage.getItem(stateName);\n\n\treturn sessionState && JSON.parse(sessionState);\n};\n","import { useState, useEffect } from \"react\";\r\n\r\n// Api\r\nimport API from \"../API\";\r\n\r\n// Helpers\r\nimport { checkExistingState } from \"../helpers\";\r\n\r\nconst initialState = {\r\n\tpage: 0,\r\n\tresults: [],\r\n\ttotal_pages: 0,\r\n\ttotal_result: 0,\r\n};\r\nexport const useHomeFetch = () => {\r\n\tconst [searchTerm, setSearchTerm] = useState(\"\");\r\n\tconst [state, setState] = useState(initialState);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(false);\r\n\tconst [LoadingMore, setLoadingMore] = useState(false);\r\n\r\n\tconst fetchMovies = async (page, searchTerm = \"\") => {\r\n\t\ttry {\r\n\t\t\tsetError(false);\r\n\t\t\tsetLoading(true);\r\n\r\n\t\t\tconst movies = await API.fetchMovies(searchTerm, page);\r\n\t\t\tsetState((prev) => ({\r\n\t\t\t\t...movies,\r\n\t\t\t\tresults:\r\n\t\t\t\t\tpage > 1 ? [...prev.results, ...movies.results] : [...movies.results],\r\n\t\t\t}));\r\n\t\t} catch (error) {\r\n\t\t\tsetError(true);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\t// Initial Render and Search\r\n\tuseEffect(() => {\r\n\t\t// Check sessionStorage\r\n\t\tif (!searchTerm) {\r\n\t\t\t// console.log(\"Grabbing from session storage\");\r\n\t\t\tconst sessionState = checkExistingState(\"homeState\");\r\n\r\n\t\t\tif (sessionState) {\r\n\t\t\t\tsetState(sessionState);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Set initial state and then fetch from API\r\n\t\tsetState(initialState);\r\n\t\tfetchMovies(1, searchTerm);\r\n\t}, [searchTerm]);\r\n\r\n\t// Load More\r\n\tuseEffect(() => {\r\n\t\tif (!LoadingMore) return;\r\n\r\n\t\tfetchMovies(state.page + 1, searchTerm);\r\n\t\tsetLoadingMore(false);\r\n\t}, [LoadingMore, searchTerm, state.page]);\r\n\r\n\t// Write to sessionStorage\r\n\tuseEffect(() => {\r\n\t\tif (!searchTerm) {\r\n\t\t\tsessionStorage.setItem(\"homeState\", JSON.stringify(state));\r\n\t\t}\r\n\t});\r\n\r\n\treturn {\r\n\t\tstate,\r\n\t\tloading,\r\n\t\terror,\r\n\t\tsearchTerm,\r\n\t\tsetSearchTerm,\r\n\t\tsetLoadingMore,\r\n\t};\r\n};\r\n","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.button`\r\n\tdisplay: block;\r\n\tbackground: var(--darkGrey);\r\n\twidth: 25%;\r\n\tmin-width: 200px;\r\n\theight: 60px;\r\n\tborder-radius: 30px;\r\n\tcolor: var(--white);\r\n\tborder: 0;\r\n\tfont-size: var(--fontL);\r\n\tmargin: 20px auto;\r\n\ttransition: all 0.3s;\r\n\toutline: none;\r\n\tcursor: pointer;\r\n\r\n\t:hover {\r\n\t\topacity: 0.8;\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Styles\r\nimport { Wrapper } from \"./LoadMoreButton.styles\";\r\nconst LoadMoreButton = ({ text, callback }) => {\r\n\treturn (\r\n\t\t<Wrapper type=\"button\" onClick={callback}>\r\n\t\t\t{text}\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nLoadMoreButton.propTypes = {\r\n\ttext: PropTypes.string,\r\n\tcallback: PropTypes.func,\r\n};\r\nexport default LoadMoreButton;\r\n","import React from \"react\";\r\n\r\n// Config\r\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config\";\r\n\r\n// Components\r\nimport HeroImage from \"./HeroImage\";\r\nimport Grid from \"./Grid\";\r\nimport Thumbnail from \"./Thumbnail\";\r\nimport Spinner from \"./Spinner\";\r\nimport SeachBar from \"./SearchBar\";\r\n\r\n// Hook\r\nimport { useHomeFetch } from \"../hooks/useHomeFetch\";\r\n\r\n// Image\r\nimport NoImage from \"../images/no_image.jpg\";\r\nimport LoadMoreButton from \"./LoadMoreButton\";\r\n\r\nconst Home = () => {\r\n\tconst { state, loading, error, searchTerm, setSearchTerm, setLoadingMore } =\r\n\t\tuseHomeFetch();\r\n\tconst res = state.results[0];\r\n\t// console.log(state);\r\n\r\n\tif (error) return <div>Something went Wrong....</div>;\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!searchTerm && state.results[0] ? (\r\n\t\t\t\t<HeroImage\r\n\t\t\t\t\timage={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${res.backdrop_path}`}\r\n\t\t\t\t\ttitle={res.original_title}\r\n\t\t\t\t\ttext={res.overview}\r\n\t\t\t\t/>\r\n\t\t\t) : null}\r\n\t\t\t<SeachBar setSearchTerm={setSearchTerm} />\r\n\t\t\t<Grid header={searchTerm ? \"Search Result\" : \"Popular Movies\"}>\r\n\t\t\t\t{state.results.map((movie) => (\r\n\t\t\t\t\t<Thumbnail\r\n\t\t\t\t\t\tkey={movie.id}\r\n\t\t\t\t\t\timage={\r\n\t\t\t\t\t\t\tmovie.poster_path\r\n\t\t\t\t\t\t\t\t? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n\t\t\t\t\t\t\t\t: NoImage\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmovieId={movie.id}\r\n\t\t\t\t\t\tclickable={true}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</Grid>\r\n\t\t\t{loading && <Spinner />}\r\n\t\t\t{state.page < state.total_pages && !loading && (\r\n\t\t\t\t<LoadMoreButton\r\n\t\t\t\t\ttext=\"Load More\"\r\n\t\t\t\t\tcallback={() => setLoadingMore(true)}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\twidth: 100%;\r\n\theight: 70px;\r\n\tbackground: var(--medGrey);\r\n\tcolor: var(--white);\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\tdisplay: flex;\r\n\twidth: 100%;\r\n\tmax-width: var(--maxWidth);\r\n\tpadding: 0 20px;\r\n\r\n\tspan {\r\n\t\tfont-size: var(--fontM);\r\n\t\tcolor: var(--white);\r\n\t\tpadding-right: 10px;\r\n\r\n\t\t@media (max-width: 768px) {\r\n\t\t\tfont-size: var(--fontS);\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n// Styles\r\nimport { Wrapper, Content } from \"./Breadcrumb.styles\";\r\n\r\nconst Breadcrumb = ({ movieTitle }) => {\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<Content>\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<span>Home</span>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<span>|</span>\r\n\t\t\t\t<span>{movieTitle}</span>\r\n\t\t\t</Content>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nBreadcrumb.propTypes = {\r\n\tmovieTitle: PropTypes.string,\r\n};\r\nexport default Breadcrumb;\r\n","import styled from \"styled-components\";\r\n\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tbackground: ${({ backdrop }) =>\r\n\t\tbackdrop ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})` : \"#000\"};\r\n\tbackground-size: cover;\r\n\tbackground-position: center;\r\n\tpadding: 40px 20px;\r\n\tanimation: animateMovieInfo 1s;\r\n\r\n\t@keyframes animateMovieInfo {\r\n\t\tfrom {\r\n\t\t\topacity: 0;\r\n\t\t}\r\n\t\tto {\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\tdisplay: flex;\r\n\tmax-width: var(--max-width);\r\n\tmargin: 0 auto;\r\n\tbackground: rgba(0, 0, 0, 0.7);\r\n\tborder-radius: 20px;\r\n\r\n\t@media (max-width: 768px) {\r\n\t\tdisplay: block;\r\n\t\tmax-height: none;\r\n\t}\r\n`;\r\n\r\nexport const Text = styled.div`\r\n\twidth: 100%;\r\n\tpadding: 20px 40px;\r\n\tcolor: var(--white);\r\n\toverflow: hidden;\r\n\r\n\t.rating-directors {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: flex-start;\r\n\t}\r\n\r\n\t.score {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\twidth: 35px;\r\n\t\theight: 35px;\r\n\t\tbackground: #fff;\r\n\t\tcolor: #000;\r\n\t\tfont-weight: 800;\r\n\t\tborder-radius: 25px;\r\n\t\tmargin: 0px 0 0 0;\r\n\t}\r\n\r\n\t.director {\r\n\t\tmargin: 0 0 0 40px;\r\n\r\n\t\tp {\r\n\t\t\tmargin: 0;\r\n\t\t}\r\n\t}\r\n\r\n\th1 {\r\n\t\t@media (max-width: 768px) {\r\n\t\t\tfont-size: var(--fontL);\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Components\r\nimport Thumbnail from \"../Thumbnail\";\r\n\r\n// Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\r\n\r\n// Image\r\nimport NoImage from \"../../images/no_image.jpg\";\r\n\r\n// Styles\r\nimport { Wrapper, Content, Text } from \"./MovieInfo.styles\";\r\n\r\nconst MovieInfo = ({ movie }) => {\r\n\treturn (\r\n\t\t<Wrapper backdrop={movie.backdrop_path}>\r\n\t\t\t<Content>\r\n\t\t\t\t<Thumbnail\r\n\t\t\t\t\timage={\r\n\t\t\t\t\t\tmovie.poster_path\r\n\t\t\t\t\t\t\t? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n\t\t\t\t\t\t\t: NoImage\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclickable={false}\r\n\t\t\t\t/>\r\n\t\t\t\t<Text>\r\n\t\t\t\t\t<h1>{movie.title}</h1>\r\n\t\t\t\t\t<h3>PLOT</h3>\r\n\t\t\t\t\t<p>{movie.overview}</p>\r\n\r\n\t\t\t\t\t<div className=\"rating-directors\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h3>RATING</h3>\r\n\t\t\t\t\t\t\t<div className=\"score\">{movie.vote_average}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div className=\"director\">\r\n\t\t\t\t\t\t\t\t<h3>DIRECTOR{movie.directors.length > 1 ? \"S\" : \"\"}</h3>\r\n\t\t\t\t\t\t\t\t{movie.directors.map((director) => (\r\n\t\t\t\t\t\t\t\t\t<p key={director.credit_id}>{director.name}</p>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Text>\r\n\t\t\t</Content>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nMovieInfo.propTypes = {\r\n\tmovie: PropTypes.object,\r\n};\r\nexport default MovieInfo;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tmin-height: 100px;\r\n\tbackground: var(--darkGrey);\r\n\tpadding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\tdisplay: flex;\r\n\tmax-width: var(--maxWidth);\r\n\twidth: 100%;\r\n\tmargin: 0 auto;\r\n\r\n\t.column {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tbackground: var(--medGrey);\r\n\t\tborder-radius: 20px;\r\n\t\tmargin: 0 20px;\r\n\t\tflex: 1;\r\n\t}\r\n\r\n\t:first-child {\r\n\t\tmargin-left: 0;\r\n\t}\r\n\t:last-child {\r\n\t\tmargin-right: 0;\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\tdisplay: block;\r\n\r\n\t\t.column {\r\n\t\t\tmargin: 20px 0;\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Helpers\r\nimport { calcTime, convertMoney } from \"../../helpers\";\r\n\r\n// Styles\r\nimport { Wrapper, Content } from \"./MovieInfoBar.styles\";\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue }) => {\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<Content>\r\n\t\t\t\t<div className=\"column\">\r\n\t\t\t\t\t<p>Running time: {calcTime(time)}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"column\">\r\n\t\t\t\t\t<p>Budget: {convertMoney(budget)}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"column\">\r\n\t\t\t\t\t<p>Revenue: {convertMoney(revenue)}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</Content>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nMovieInfoBar.propTypes = {\r\n\ttime: PropTypes.number,\r\n\tbudget: PropTypes.number,\r\n\trevenue: PropTypes.number,\r\n};\r\nexport default MovieInfoBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tcolor: var(--white);\r\n\tbackground: var(--darkGrey);\r\n\tborder-radius: 20px;\r\n\tpadding: 5px;\r\n\ttext-align: center;\r\n\r\n\th3 {\r\n\t\tmargin: 10px 0 0 0;\r\n\t}\r\n\r\n\tp {\r\n\t\tmargin: 5px 0;\r\n\t}\r\n`;\r\n\r\nexport const Image = styled.img`\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\theight: 300px;\r\n\tobject-fit: cover;\r\n\tborder-radius: 15px;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// Styles\r\nimport { Wrapper, Image } from \"./Cast.styles\";\r\nimport { cast } from \"bluebird\";\r\n\r\nconst Cast = ({ name, character, imageUrl }) => {\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<Image src={imageUrl} alt=\"actor-thumbnail\" />\r\n\t\t\t<h3>{name}</h3>\r\n\t\t\t<p>{character}</p>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\ncast.propTypes = {\r\n\tname: PropTypes.string,\r\n\tcharacter: PropTypes.string,\r\n\timageUrl: PropTypes.string,\r\n};\r\nexport default Cast;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../config\";\r\n\r\n// Components\r\nimport Grid from \"./Grid\";\r\nimport Spinner from \"./Spinner\";\r\nimport Breadcrumb from \"./Breadcrumb\";\r\n\r\n// Hook\r\nimport { useMovieFetch } from \"../hooks/useMovieFetch\";\r\n\r\n// Image\r\nimport NoImage from \"../images/no_image.jpg\";\r\nimport MovieInfo from \"./MovieInfo\";\r\nimport MovieInfoBar from \"./MovieInfoBar\";\r\nimport Actor from \"./Cast\";\r\n\r\nconst Movie = () => {\r\n\tconst { movieId } = useParams();\r\n\r\n\tconst { state: movie, loading, error } = useMovieFetch(movieId);\r\n\r\n\tif (loading) return <Spinner />;\r\n\tif (error) return <div>Something went wrong..</div>;\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Breadcrumb movieTitle={movie.original_title} />\r\n\t\t\t<MovieInfo movie={movie} />\r\n\t\t\t<MovieInfoBar\r\n\t\t\t\ttime={movie.runtime}\r\n\t\t\t\tbudget={movie.budget}\r\n\t\t\t\trevenue={movie.revenue}\r\n\t\t\t/>\r\n\t\t\t<Grid header=\"Cast\">\r\n\t\t\t\t{movie.cast.map((cast) => (\r\n\t\t\t\t\t<Actor\r\n\t\t\t\t\t\tkey={cast.credit_id}\r\n\t\t\t\t\t\tname={cast.name}\r\n\t\t\t\t\t\tcharacter={cast.character}\r\n\t\t\t\t\t\timageUrl={\r\n\t\t\t\t\t\t\tcast.profile_path\r\n\t\t\t\t\t\t\t\t? `${IMAGE_BASE_URL}${POSTER_SIZE}${cast.profile_path}`\r\n\t\t\t\t\t\t\t\t: NoImage\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Movie;\r\n","import { useState, useEffect } from \"react\";\r\n\r\n// API\r\nimport API from \"../API\";\r\n// Helpers\r\nimport { checkExistingState } from \"../helpers\";\r\n\r\nexport const useMovieFetch = (movieId) => {\r\n\tconst [state, setState] = useState({});\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [error, setError] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchMovie = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tsetError(false);\r\n\r\n\t\t\t\tconst movie = await API.fetchMovie(movieId);\r\n\t\t\t\tconst credits = await API.fetchCredits(movieId);\r\n\r\n\t\t\t\tconst directors = credits.crew.filter(\r\n\t\t\t\t\t(member) => member.job === \"Director\"\r\n\t\t\t\t);\r\n\r\n\t\t\t\tsetState({\r\n\t\t\t\t\t...movie,\r\n\t\t\t\t\tcast: credits.cast,\r\n\t\t\t\t\tdirectors,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetError(true);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Check session storage\r\n\t\tconst sessionState = checkExistingState(movieId);\r\n\t\tif (sessionState) {\r\n\t\t\t// set session storage\r\n\t\t\tsetState(sessionState);\r\n\t\t\tsetLoading(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Fetch from API\r\n\t\tfetchMovie();\r\n\t}, [movieId]);\r\n\r\n\t// Write to session\r\n\r\n\tuseEffect(() => {\r\n\t\tsessionStorage.setItem(movieId, JSON.stringify(state));\r\n\t}, [movieId, state]);\r\n\r\n\treturn { state, loading, error };\r\n};\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n\treturn <div>Not Found</div>;\r\n};\r\n\r\nexport default NotFound;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  :root {\r\n    --maxWidth: 1280px;\r\n    --white: #fff;\r\n    --black: #000;\r\n    --lightGrey: #eee;\r\n    --medGrey: #353535;\r\n    --darkGrey: #1c1c1c;\r\n    --fontXL: 2.5rem;\r\n    --fontL: 1.5rem;\r\n    --fontM: 1.2rem;\r\n    --fontS: 1rem;\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n    font-family: 'Abel', sans-serif;\r\n  }\r\n\r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    h1 {\r\n      font-size: 2rem;\r\n      font-weight: 600;\r\n      color: var(--white);\r\n    }\r\n\r\n    h3 {\r\n      font-size: 1.1 rem;\r\n      font-weight: 600;\r\n    }\r\n\r\n    p {\r\n      font-size: 1 rem;\r\n      color: var(--white)\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\n\n// Routing\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\n// Components\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport Movie from \"./components/Movie\";\nimport NotFound from \"./components/NotFound\";\n\n// Styles\nimport { GlobalStyle } from \"./GlobalStyles\";\n\nconst App = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<GlobalStyle />\n\t\t\t<Header />\n\t\t\t<Routes>\n\t\t\t\t<Route path=\"/\" element={<Home />} />\n\t\t\t\t<Route path=\"/:movieId\" element={<Movie />} />\n\t\t\t\t<Route path=\"/*\" element={<NotFound />} />\n\t\t\t</Routes>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}